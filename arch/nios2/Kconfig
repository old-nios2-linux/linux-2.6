#
# Nios2 port by Wind River Systems Inc trough:
#   fredrik.markstrom@gmail.com and ivarholmqvist@gmail.com
#

menu "NiosII Configuration"

source "arch/nios2/boards/Kconfig"

menu "NiosII specific compiler options"

config NIOS2_HW_MUL_SUPPORT
	bool "Enable MUL instruction"
	default y
	help
	  Enables the -mhw-mul compiler flag.

config NIOS2_HW_MULX_SUPPORT
	bool "Enable MULX instruction"
	default n
	help
	  Enables the -mhw-mulx compiler flag.

config NIOS2_HW_DIV_SUPPORT
	bool "Enable DIV instruction"
	default n
	help
	  Enables the -mhw-div compiler flag.

endmenu

config OF
	bool "Devicetree support"
	def_bool n
	select DTC
	select OF_FLATTREE

config DTC
	bool
	depends on OF

config NIOS2_UIMAGE_FLASHADDR
	hex "Offset address for uImage.flash"
	default 0x1C80000
	help
	  uImage.flash is simply an srec of the uImage with an offset. Suitable
	  for use with the nios2-flash-programmer tool.

choice
	prompt "Kernel executes from"
	help
	  Choose the memory type that the kernel will be running in.

config RAMKERNEL
	bool "RAM"
	help
	  The kernel will be resident in RAM when running.

endchoice

config CMDLINE
	string "Default kernel command string"
	default ""
	help
	  On some platforms, there is currently no way for the boot loader to
	  pass arguments to the kernel. For these platforms, you can supply
	  some command-line options at build time by entering them here.  In
	  other cases you can specify kernel args so that you don't have
	  to set them up in board prom initialization routines.

config PASS_CMDLINE
	bool "Passed kernel command line from u-boot"
	default n
	help
	  Use bootargs env variable from u-boot for kernel command line.
	  will override "Default kernel command string".
          Say N if you are unsure.

config BOOT_LINK_OFFSET
	hex "Link address offset for booting"
	default "0x00500000"
	help
	  This option allows you to set the link address offset of the zImage.
	  This can be useful if you are on a board which has a small amount of
	  memory.

config AVALON_DMA
	bool "Support for DMA controller with Avalon interface"
	default y
	help
	  Support the Altera DMA controller with Avalon interface, so drivers
	  for DMA-able devices can use this interface.

config GENERIC_GPIO
	bool "GPIO interface"
	default n
	help
    	  The custom gpio core, openip/gpio, uses fewer LEs and runs faster
    	  than the Altera PIO. The spinlock is no longer needed.

source "arch/nios2/drivers/Kconfig"

endmenu

config NIOS2
	def_bool y
	# Horrible source of confusion.  Die, die, die ...
	select EMBEDDED
	select USB_ARCH_HAS_HCD

config MMU
	def_bool y

config RWSEM_GENERIC_SPINLOCK
	def_bool y

#
# FIXME: Should UID16 really be set ?
#
config UID16
	def_bool y

config GENERIC_CSUM
	def_bool y

config GENERIC_FIND_NEXT_BIT
	def_bool y

config GENERIC_HWEIGHT
	def_bool y

config GENERIC_CALIBRATE_DELAY
	def_bool y

config GENERIC_TIME
	def_bool y

config GENERIC_HARDIRQS
	def_bool y

config GENERIC_HARDIRQS_NO__DO_IRQ
	def_bool y

config GENERIC_IRQ_PROBE
	def_bool y

config NO_IOPORT
	def_bool y

config ZONE_DMA
	def_bool y

config BINFMT_ELF
	def_bool y

# FIXME: really !
config NOT_COHERENT_CACHE
	def_bool n

config HZ
	int
	default 100

config TRACE_IRQFLAGS_SUPPORT
	def_bool n

source "mm/Kconfig"

source "kernel/Kconfig.preempt"

source "init/Kconfig"

source "kernel/Kconfig.freezer"

source "net/Kconfig"

source "drivers/Kconfig"

source "fs/Kconfig"

source "arch/nios2/Kconfig.debug"

source "security/Kconfig"

source "crypto/Kconfig"

source "lib/Kconfig"
