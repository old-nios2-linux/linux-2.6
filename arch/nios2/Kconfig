#
# Nios2 port by Wind River Systems Inc trough:
#   fredrik.markstrom@gmail.com and ivarholmqvist@gmail.com
#

menu "NiosII Configuration"

choice
	prompt "NiosII FPGA configuration"

config NIOS2_DEFAULT_MMU
	bool "MMU_DEFAULT"
	help
	  The default mmu config for the v17 release

config NIOS2_MAXIMUM_MMU
	bool "MAXIMUM_MMU"
	help
	  The maximum mmu config for the v17 release

config NIOS2_CUSTOM_FPGA
	bool "CUSTOM_FPGA"
	help
	  Adapt the kernel to custom FPGA configuration. You will
          need to generate a header file for your desgin using the
	  "sopc-create-header-files" scripts provided by Altera.
	  The file "include/asm-nios2/custom_fpga.h" will be used.

endchoice

config NIOS2_HW_MUL_SUPPORT
       bool "HW mul support"
       default y
       help
	Enables the -mhw-mul compiler flag.

config NIOS2_HW_MULX_SUPPORT
       bool "HW mulx support"
       default n
       help
	Enables the -mhw-mulx compiler flag.

config NIOS2_HW_DIV_SUPPORT
       bool "HW div support"
       default n
       help
	Enables the -mhw-div compiler flag.

config NIOS2_UIMAGE_FLASHADDR
       hex "Offset address for uImage.flash"
       default 0x1C80000
       help
       	  uImage.flash is simply an srec of the uImage with an
          offset. Suitable for use with the nios2-flash-programmer
          tool.

config PASS_CMDLINE
	bool "Passed kernel command line from u-boot"
	default n
	help
	  Use bootargs env variable from u-boot for kernel command line.
	  will override "Default kernel command string".
          Say N if you are unsure.

config BOOT_LINK_OFFSET
	hex "Link address offset for booting"
	default "0x00500000"
	help
	  This option allows you to set the link address offset of the zImage.
	  This can be useful if you are on a board which has a small amount of
	  memory.

config AVALON_DMA
	bool "Support for DMA controller with Avalon interface"
	default y
	help
	  Support the Altera DMA controller with Avalon interface, so drivers
	  for DMA-able devices can use this interface.

config GENERIC_GPIO
	bool "GPIO interface"
	default n
	help
    	  The custom gpio core, openip/gpio, uses fewer LEs and runs faster
    	  than the Altera PIO. The spinlock is no longer needed.

config PIO_DEVICES
       tristate "Enable NiosII PIO driver"
       default y
       help

config PIO_LED
       bool "Enable NiosII PIO led driver"
       depends on PIO_DEVICES
       default y
       help
         Enable the example PIO led driver (which just
         displays a timer value on the 8 leds)

source "arch/nios2/drivers/Kconfig"

endmenu

config NIOS2
	bool
	default y
	# Horrible source of confusion.  Die, die, die ...
	select EMBEDDED

config MMU
       bool
       default y


config RWSEM_GENERIC_SPINLOCK
	bool
	default y

#
# FIXME: Should UID16 really be set ?
#
config UID16
       bool
       default y

config GENERIC_CSUM
	def_bool y

config GENERIC_FIND_NEXT_BIT
	bool
	default y

config GENERIC_HWEIGHT
	bool
	default y

config GENERIC_CALIBRATE_DELAY
	bool
	default y

config GENERIC_TIME
	bool
	default y

config GENERIC_HARDIRQS
	def_bool y

config GENERIC_IRQ_PROBE
	def_bool y

config NO_IOPORT
	def_bool y

config ZONE_DMA
       bool
       default y

config EARLY_PRINTK
       bool
       default y

config BINFMT_ELF
       bool
       default y

# FIXME: really !
config NOT_COHERENT_CACHE
       bool
       default n

config HZ
       int
       default 100

config TRACE_IRQFLAGS_SUPPORT
       bool
       default n

source "mm/Kconfig"

source "kernel/Kconfig.preempt"

source "init/Kconfig"

source "kernel/Kconfig.freezer"

source "net/Kconfig"

source "drivers/Kconfig"

source "fs/Kconfig"

source "arch/nios2/Kconfig.debug"

source "security/Kconfig"

source "crypto/Kconfig"

source "lib/Kconfig"
