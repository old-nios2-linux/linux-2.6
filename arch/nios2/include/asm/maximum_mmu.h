#ifndef _ALTERA_LINUX_CPU_H_
#define _ALTERA_LINUX_CPU_H_

/* Note, this file was manually edited after generation
 * since the multiple inclusion proctetion macro above collides with
 * include/linux/cpu.h
 */

/*
 * This file was automatically generated by the swinfo2header utility.
 *
 * Created from SOPC Builder system 'nios2_linux_3c120_125mhz_sys_sopc' in
 * file 'maximum//nios2_linux_3c120_125mhz_sys_sopc.sopcinfo'.
 */

/*
 * This file contains macros for module 'linux_cpu' and devices
 * connected to the following masters:
 *   instruction_master
 *   tightly_coupled_instruction_master_0
 *   data_master
 *   tightly_coupled_data_master_0
 *
 * Do not #include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate #defines.
 * Instead, use the system header file which has #defines with unique names.
 */

/*
 * Macros for module 'linux_cpu', class 'altera_nios2'.
 * The macros have no prefix.
 */
#define CPU_IMPLEMENTATION "fast"
#define ICACHE_LINE_SIZE 32
#define ICACHE_LINE_SIZE_LOG2 5
#define ICACHE_SIZE 32768
#define DCACHE_LINE_SIZE 32
#define DCACHE_LINE_SIZE_LOG2 5
#define DCACHE_SIZE 32768
#define INITDA_SUPPORTED 
#define FLUSHDA_SUPPORTED 
#define HAS_JMPI_INSTRUCTION 
#define MMU_PRESENT 
#define KERNEL_REGION_BASE 0xc0000000
#define IO_REGION_BASE 0xe0000000
#define KERNEL_MMU_REGION_BASE 0x80000000
#define USER_REGION_BASE 0x0
#define PROCESS_ID_NUM_BITS 14
#define TLB_NUM_WAYS 16
#define TLB_PTR_SZ 10
#define TLB_NUM_ENTRIES 1024
#define FAST_TLB_MISS_EXCEPTION_ADDR 0xc7fff400
#define EXCEPTION_ADDR 0xd0000020
#define RESET_ADDR 0xc2800000
#define BREAK_ADDR 0xc7fff820
#define HAS_DEBUG_STUB 
#define HAS_DEBUG_CORE 1
#define HAS_ILLEGAL_INSTRUCTION_EXCEPTION 
#define HAS_ILLEGAL_MEMORY_ACCESS_EXCEPTION 
#define HAS_EXTRA_EXCEPTION_INFO 
#define CPU_ID_SIZE 1
#define CPU_ID_VALUE 0x0
#define HARDWARE_DIVIDE_PRESENT 1
#define HARDWARE_MULTIPLY_PRESENT 1
#define HARDWARE_MULX_PRESENT 0
#define INST_ADDR_WIDTH 29
#define DATA_ADDR_WIDTH 29

/*
 * Macros for device 'cfi_flash_64m', class 'altera_avalon_cfi_flash'
 * The macros are prefixed with 'CFI_FLASH_64M_'.
 * The prefix is the slave descriptor.
 */
#define CFI_FLASH_64M_BASE 0x0
#define CFI_FLASH_64M_SPAN 67108864u
#define CFI_FLASH_64M_SETUP_VALUE 75
#define CFI_FLASH_64M_WAIT_VALUE 35
#define CFI_FLASH_64M_HOLD_VALUE 1
#define CFI_FLASH_64M_TIMING_UNITS "ns"
#define CFI_FLASH_64M_SIZE 67108864u

/*
 * Macros for device 'fast_tlb_miss_ram_1k', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'FAST_TLB_MISS_RAM_1K_'.
 * The prefix is the slave descriptor.
 */
#define FAST_TLB_MISS_RAM_1K_BASE 0x7fff400
#define FAST_TLB_MISS_RAM_1K_SPAN 1024u
#define FAST_TLB_MISS_RAM_1K_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define FAST_TLB_MISS_RAM_1K_INIT_CONTENTS_FILE "fast_tlb_miss_ram_1k"
#define FAST_TLB_MISS_RAM_1K_NON_DEFAULT_INIT_FILE_ENABLED 0
#define FAST_TLB_MISS_RAM_1K_GUI_RAM_BLOCK_TYPE "Automatic"
#define FAST_TLB_MISS_RAM_1K_WRITABLE 1
#define FAST_TLB_MISS_RAM_1K_DUAL_PORT 1
#define FAST_TLB_MISS_RAM_1K_SIZE_VALUE 1024u
#define FAST_TLB_MISS_RAM_1K_SIZE_MULTIPLE 1
#define FAST_TLB_MISS_RAM_1K_CONTENTS_INFO ""
#define FAST_TLB_MISS_RAM_1K_RAM_BLOCK_TYPE "Auto"
#define FAST_TLB_MISS_RAM_1K_INIT_MEM_CONTENT 1
#define FAST_TLB_MISS_RAM_1K_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define FAST_TLB_MISS_RAM_1K_INSTANCE_ID "NONE"
#define FAST_TLB_MISS_RAM_1K_READ_DURING_WRITE_MODE "DONT_CARE"

/*
 * Macros for device 'descriptor_memory', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'DESCRIPTOR_MEMORY_'.
 * The prefix is the slave descriptor.
 */
#define DESCRIPTOR_MEMORY_BASE 0x8002000
#define DESCRIPTOR_MEMORY_SPAN 8192u
#define DESCRIPTOR_MEMORY_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define DESCRIPTOR_MEMORY_INIT_CONTENTS_FILE "descriptor_memory"
#define DESCRIPTOR_MEMORY_NON_DEFAULT_INIT_FILE_ENABLED 0
#define DESCRIPTOR_MEMORY_GUI_RAM_BLOCK_TYPE "Automatic"
#define DESCRIPTOR_MEMORY_WRITABLE 1
#define DESCRIPTOR_MEMORY_DUAL_PORT 0
#define DESCRIPTOR_MEMORY_SIZE_VALUE 8192u
#define DESCRIPTOR_MEMORY_SIZE_MULTIPLE 1
#define DESCRIPTOR_MEMORY_CONTENTS_INFO ""
#define DESCRIPTOR_MEMORY_RAM_BLOCK_TYPE "Auto"
#define DESCRIPTOR_MEMORY_INIT_MEM_CONTENT 1
#define DESCRIPTOR_MEMORY_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define DESCRIPTOR_MEMORY_INSTANCE_ID "NONE"
#define DESCRIPTOR_MEMORY_READ_DURING_WRITE_MODE "DONT_CARE"

/*
 * Macros for device 'tse_mac', class 'triple_speed_ethernet'
 * The macros are prefixed with 'TSE_MAC_'.
 * The prefix is the slave descriptor.
 */
#define TSE_MAC_BASE 0x8004000
#define TSE_MAC_SPAN 1024u
#define TSE_MAC_TRANSMIT "sgdma_tx"
#define TSE_MAC_RECEIVE "sgdma_rx"
#define TSE_MAC_TRANSMIT_FIFO_DEPTH 2048
#define TSE_MAC_RECEIVE_FIFO_DEPTH 2048
#define TSE_MAC_FIFO_WIDTH 32
#define TSE_MAC_ENABLE_MACLITE 0
#define TSE_MAC_MACLITE_GIGE 0
#define TSE_MAC_USE_MDIO 1
#define TSE_MAC_NUMBER_OF_CHANNEL 0
#define TSE_MAC_NUMBER_OF_MAC_MDIO_SHARED 0
#define TSE_MAC_IS_MULTICHANNEL_MAC 0
#define TSE_MAC_MDIO_SHARED 0
#define TSE_MAC_REGISTER_SHARED 0
#define TSE_MAC_PCS 0
#define TSE_MAC_PCS_SGMII 0
#define TSE_MAC_PCS_ID 0u

/*
 * Macros for device 'sgdma_rx', class 'altera_avalon_sgdma'
 * The macros are prefixed with 'SGDMA_RX_'.
 * The prefix is the slave descriptor.
 */
#define SGDMA_RX_BASE 0x8004400
#define SGDMA_RX_SPAN 1024u
#define SGDMA_RX_IRQ 2
#define SGDMA_RX_READ_BLOCK_DATA_WIDTH 32
#define SGDMA_RX_WRITE_BLOCK_DATA_WIDTH 32
#define SGDMA_RX_STREAM_DATA_WIDTH 32
#define SGDMA_RX_ADDRESS_WIDTH 32
#define SGDMA_RX_HAS_READ_BLOCK 0
#define SGDMA_RX_HAS_WRITE_BLOCK 1
#define SGDMA_RX_READ_BURSTCOUNT_WIDTH 4
#define SGDMA_RX_WRITE_BURSTCOUNT_WIDTH 4
#define SGDMA_RX_BURST_TRANSFER 0
#define SGDMA_RX_ALWAYS_DO_MAX_BURST 1
#define SGDMA_RX_DESCRIPTOR_READ_BURST 0
#define SGDMA_RX_UNALIGNED_TRANSFER 0
#define SGDMA_RX_CONTROL_SLAVE_DATA_WIDTH 32
#define SGDMA_RX_CONTROL_SLAVE_ADDRESS_WIDTH 8
#define SGDMA_RX_DESC_DATA_WIDTH 32
#define SGDMA_RX_CHAIN_WRITEBACK_DATA_WIDTH 32
#define SGDMA_RX_STATUS_TOKEN_DATA_WIDTH 24
#define SGDMA_RX_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define SGDMA_RX_BURST_DATA_WIDTH 8
#define SGDMA_RX_CONTROL_DATA_WIDTH 8
#define SGDMA_RX_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define SGDMA_RX_COMMAND_FIFO_DATA_WIDTH 104
#define SGDMA_RX_SYMBOLS_PER_BEAT 4
#define SGDMA_RX_IN_ERROR_WIDTH 6
#define SGDMA_RX_OUT_ERROR_WIDTH 0

/*
 * Macros for device 'ddr2_lo_latency_128m', class 'altmemddr2'
 * Path to the device is from the master group 'sgdma_rx_m_write'.
 * The macros are prefixed with 'SGDMA_RX_M_WRITE_DDR2_LO_LATENCY_128M_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define SGDMA_RX_M_WRITE_DDR2_LO_LATENCY_128M_BASE 0x10000000
#define SGDMA_RX_M_WRITE_DDR2_LO_LATENCY_128M_SPAN 134217728u

/*
 * Macros for device 'sgdma_tx', class 'altera_avalon_sgdma'
 * The macros are prefixed with 'SGDMA_TX_'.
 * The prefix is the slave descriptor.
 */
#define SGDMA_TX_BASE 0x8004800
#define SGDMA_TX_SPAN 1024u
#define SGDMA_TX_IRQ 3
#define SGDMA_TX_READ_BLOCK_DATA_WIDTH 32
#define SGDMA_TX_WRITE_BLOCK_DATA_WIDTH 32
#define SGDMA_TX_STREAM_DATA_WIDTH 32
#define SGDMA_TX_ADDRESS_WIDTH 32
#define SGDMA_TX_HAS_READ_BLOCK 1
#define SGDMA_TX_HAS_WRITE_BLOCK 0
#define SGDMA_TX_READ_BURSTCOUNT_WIDTH 4
#define SGDMA_TX_WRITE_BURSTCOUNT_WIDTH 4
#define SGDMA_TX_BURST_TRANSFER 0
#define SGDMA_TX_ALWAYS_DO_MAX_BURST 1
#define SGDMA_TX_DESCRIPTOR_READ_BURST 0
#define SGDMA_TX_UNALIGNED_TRANSFER 0
#define SGDMA_TX_CONTROL_SLAVE_DATA_WIDTH 32
#define SGDMA_TX_CONTROL_SLAVE_ADDRESS_WIDTH 8
#define SGDMA_TX_DESC_DATA_WIDTH 32
#define SGDMA_TX_CHAIN_WRITEBACK_DATA_WIDTH 32
#define SGDMA_TX_STATUS_TOKEN_DATA_WIDTH 24
#define SGDMA_TX_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define SGDMA_TX_BURST_DATA_WIDTH 8
#define SGDMA_TX_CONTROL_DATA_WIDTH 8
#define SGDMA_TX_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define SGDMA_TX_COMMAND_FIFO_DATA_WIDTH 104
#define SGDMA_TX_SYMBOLS_PER_BEAT 4
#define SGDMA_TX_IN_ERROR_WIDTH 0
#define SGDMA_TX_OUT_ERROR_WIDTH 1

/*
 * Macros for device 'ddr2_lo_latency_128m', class 'altmemddr2'
 * Path to the device is from the master group 'sgdma_tx_m_read'.
 * The macros are prefixed with 'SGDMA_TX_M_READ_DDR2_LO_LATENCY_128M_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define SGDMA_TX_M_READ_DDR2_LO_LATENCY_128M_BASE 0x10000000
#define SGDMA_TX_M_READ_DDR2_LO_LATENCY_128M_SPAN 134217728u

/*
 * Macros for device 'uart', class 'altera_avalon_uart'
 * The macros are prefixed with 'UART_'.
 * The prefix is the slave descriptor.
 */
#define UART_BASE 0x8004c80
#define UART_SPAN 32u
#define UART_IRQ 10
#define UART_BAUD 115200
#define UART_DATA_BITS 8
#define UART_FIXED_BAUD 0
#define UART_PARITY 'N'
#define UART_STOP_BITS 1
#define UART_USE_CTS_RTS 0
#define UART_USE_EOP_REGISTER 0
#define UART_SIM_TRUE_BAUD 0
#define UART_SIM_CHAR_STREAM ""
#define UART_FREQ 62500000u

/*
 * Macros for device 'user_led_pio_8out', class 'altera_avalon_pio'
 * The macros are prefixed with 'USER_LED_PIO_8OUT_'.
 * The prefix is the slave descriptor.
 */
#define USER_LED_PIO_8OUT_BASE 0x8004cc0
#define USER_LED_PIO_8OUT_SPAN 16u
#define USER_LED_PIO_8OUT_DO_TEST_BENCH_WIRING 0
#define USER_LED_PIO_8OUT_DRIVEN_SIM_VALUE 0x0
#define USER_LED_PIO_8OUT_HAS_TRI 0
#define USER_LED_PIO_8OUT_HAS_OUT 1
#define USER_LED_PIO_8OUT_HAS_IN 0
#define USER_LED_PIO_8OUT_CAPTURE 0
#define USER_LED_PIO_8OUT_BIT_CLEARING_EDGE_REGISTER 0
#define USER_LED_PIO_8OUT_DATA_WIDTH 8
#define USER_LED_PIO_8OUT_RESET_VALUE 0xff
#define USER_LED_PIO_8OUT_EDGE_TYPE "NONE"
#define USER_LED_PIO_8OUT_IRQ_TYPE "NONE"
#define USER_LED_PIO_8OUT_FREQ 62500000u

/*
 * Macros for device 'user_dipsw_pio_8in', class 'altera_avalon_pio'
 * The macros are prefixed with 'USER_DIPSW_PIO_8IN_'.
 * The prefix is the slave descriptor.
 */
#define USER_DIPSW_PIO_8IN_BASE 0x8004ce0
#define USER_DIPSW_PIO_8IN_SPAN 16u
#define USER_DIPSW_PIO_8IN_IRQ 8
#define USER_DIPSW_PIO_8IN_DO_TEST_BENCH_WIRING 0
#define USER_DIPSW_PIO_8IN_DRIVEN_SIM_VALUE 0x0
#define USER_DIPSW_PIO_8IN_HAS_TRI 0
#define USER_DIPSW_PIO_8IN_HAS_OUT 0
#define USER_DIPSW_PIO_8IN_HAS_IN 1
#define USER_DIPSW_PIO_8IN_CAPTURE 1
#define USER_DIPSW_PIO_8IN_BIT_CLEARING_EDGE_REGISTER 1
#define USER_DIPSW_PIO_8IN_DATA_WIDTH 8
#define USER_DIPSW_PIO_8IN_RESET_VALUE 0x0
#define USER_DIPSW_PIO_8IN_EDGE_TYPE "ANY"
#define USER_DIPSW_PIO_8IN_IRQ_TYPE "EDGE"
#define USER_DIPSW_PIO_8IN_FREQ 62500000u

/*
 * Macros for device 'user_pb_pio_4in', class 'altera_avalon_pio'
 * The macros are prefixed with 'USER_PB_PIO_4IN_'.
 * The prefix is the slave descriptor.
 */
#define USER_PB_PIO_4IN_BASE 0x8004d00
#define USER_PB_PIO_4IN_SPAN 16u
#define USER_PB_PIO_4IN_IRQ 9
#define USER_PB_PIO_4IN_DO_TEST_BENCH_WIRING 0
#define USER_PB_PIO_4IN_DRIVEN_SIM_VALUE 0x0
#define USER_PB_PIO_4IN_HAS_TRI 0
#define USER_PB_PIO_4IN_HAS_OUT 0
#define USER_PB_PIO_4IN_HAS_IN 1
#define USER_PB_PIO_4IN_CAPTURE 1
#define USER_PB_PIO_4IN_BIT_CLEARING_EDGE_REGISTER 1
#define USER_PB_PIO_4IN_DATA_WIDTH 4
#define USER_PB_PIO_4IN_RESET_VALUE 0x0
#define USER_PB_PIO_4IN_EDGE_TYPE "ANY"
#define USER_PB_PIO_4IN_IRQ_TYPE "EDGE"
#define USER_PB_PIO_4IN_FREQ 62500000u

/*
 * Macros for device 'sysid', class 'altera_avalon_sysid'
 * The macros are prefixed with 'SYSID_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_BASE 0x8004d40
#define SYSID_SPAN 8u
#define SYSID_ID 284355090u
#define SYSID_TIMESTAMP 1233268417u

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_BASE 0x8004d50
#define JTAG_UART_SPAN 8u
#define JTAG_UART_IRQ 1
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8
#define JTAG_UART_READ_THRESHOLD 8

/*
 * Macros for device 'linux_timer_1ms', class 'altera_avalon_timer'
 * The macros are prefixed with 'LINUX_TIMER_1MS_'.
 * The prefix is the slave descriptor.
 */
#define LINUX_TIMER_1MS_BASE 0x8400000
#define LINUX_TIMER_1MS_SPAN 32u
#define LINUX_TIMER_1MS_IRQ 11
#define LINUX_TIMER_1MS_ALWAYS_RUN 0
#define LINUX_TIMER_1MS_FIXED_PERIOD 0
#define LINUX_TIMER_1MS_SNAPSHOT 1
#define LINUX_TIMER_1MS_PERIOD 1
#define LINUX_TIMER_1MS_PERIOD_UNITS "ms"
#define LINUX_TIMER_1MS_RESET_OUTPUT 0
#define LINUX_TIMER_1MS_TIMEOUT_PULSE_OUTPUT 0
#define LINUX_TIMER_1MS_FREQ 125000000u
#define LINUX_TIMER_1MS_LOAD_VALUE 124999ULL
#define LINUX_TIMER_1MS_COUNTER_SIZE 32
#define LINUX_TIMER_1MS_MULT 0.0010
#define LINUX_TIMER_1MS_TICKS_PER_SEC 1000u

/*
 * Macros for device 'ddr2_lo_latency_128m', class 'altmemddr2'
 * The macros are prefixed with 'DDR2_LO_LATENCY_128M_'.
 * The prefix is the slave descriptor.
 */
#define DDR2_LO_LATENCY_128M_BASE 0x10000000
#define DDR2_LO_LATENCY_128M_SPAN 134217728u


#endif /* _ALTERA_LINUX_CPU_H_ */
